
use std::collections::HashMap;
use std::env;
use std::process;
use std::fs;

#[derive(Debug, Clone)]
struct Token {
    name: String,
    lexeme: String,
}

impl Token {
    fn new(name: String, lexeme: String) -> Token {
        Token { name, lexeme }
    }
}

fn main() {
    let args: Vec<String> = env::args().collect();
    if args.len() < 2 {
        println!("usage: ./rust-lex \"<file>\"");
        process::exit(1);
    }
    let file = fs::read_to_string(&args[1]).unwrap();
    let mut dfa:  HashMap<u32, HashMap<u8, u32>> = HashMap::new();
    let mut accepting_states: HashMap<u32, String> = HashMap::new();
    let mut keywords: HashMap<String, String> = HashMap::new();
dfa.insert(5, HashMap::new());dfa.get_mut(&5).unwrap().insert(104, 6);dfa.get_mut(&5).unwrap().insert(103, 6);dfa.get_mut(&5).unwrap().insert(106, 6);dfa.get_mut(&5).unwrap().insert(119, 6);dfa.get_mut(&5).unwrap().insert(90, 6);dfa.get_mut(&5).unwrap().insert(55, 6);dfa.get_mut(&5).unwrap().insert(118, 6);dfa.get_mut(&5).unwrap().insert(99, 6);dfa.get_mut(&5).unwrap().insert(52, 6);dfa.get_mut(&5).unwrap().insert(79, 6);dfa.get_mut(&5).unwrap().insert(82, 6);dfa.get_mut(&5).unwrap().insert(70, 6);dfa.get_mut(&5).unwrap().insert(75, 6);dfa.get_mut(&5).unwrap().insert(57, 6);dfa.get_mut(&5).unwrap().insert(74, 6);dfa.get_mut(&5).unwrap().insert(67, 6);dfa.get_mut(&5).unwrap().insert(49, 6);dfa.get_mut(&5).unwrap().insert(83, 6);dfa.get_mut(&5).unwrap().insert(101, 6);dfa.get_mut(&5).unwrap().insert(98, 6);dfa.get_mut(&5).unwrap().insert(121, 6);dfa.get_mut(&5).unwrap().insert(51, 6);dfa.get_mut(&5).unwrap().insert(73, 6);dfa.get_mut(&5).unwrap().insert(112, 6);dfa.get_mut(&5).unwrap().insert(77, 6);dfa.get_mut(&5).unwrap().insert(87, 6);dfa.get_mut(&5).unwrap().insert(89, 6);dfa.get_mut(&5).unwrap().insert(85, 6);dfa.get_mut(&5).unwrap().insert(34, 6);dfa.get_mut(&5).unwrap().insert(116, 6);dfa.get_mut(&5).unwrap().insert(110, 6);dfa.get_mut(&5).unwrap().insert(88, 6);dfa.get_mut(&5).unwrap().insert(114, 6);dfa.get_mut(&5).unwrap().insert(65, 6);dfa.get_mut(&5).unwrap().insert(108, 6);dfa.get_mut(&5).unwrap().insert(111, 6);dfa.get_mut(&5).unwrap().insert(68, 6);dfa.get_mut(&5).unwrap().insert(56, 6);dfa.get_mut(&5).unwrap().insert(120, 6);dfa.get_mut(&5).unwrap().insert(76, 6);dfa.get_mut(&5).unwrap().insert(50, 6);dfa.get_mut(&5).unwrap().insert(122, 6);dfa.get_mut(&5).unwrap().insert(113, 6);dfa.get_mut(&5).unwrap().insert(117, 6);dfa.get_mut(&5).unwrap().insert(84, 6);dfa.get_mut(&5).unwrap().insert(78, 6);dfa.get_mut(&5).unwrap().insert(107, 6);dfa.get_mut(&5).unwrap().insert(115, 6);dfa.get_mut(&5).unwrap().insert(105, 6);dfa.get_mut(&5).unwrap().insert(66, 6);dfa.get_mut(&5).unwrap().insert(54, 6);dfa.get_mut(&5).unwrap().insert(102, 6);dfa.get_mut(&5).unwrap().insert(80, 6);dfa.get_mut(&5).unwrap().insert(69, 6);dfa.get_mut(&5).unwrap().insert(97, 6);dfa.get_mut(&5).unwrap().insert(100, 6);dfa.get_mut(&5).unwrap().insert(86, 6);dfa.get_mut(&5).unwrap().insert(72, 6);dfa.get_mut(&5).unwrap().insert(81, 6);dfa.get_mut(&5).unwrap().insert(48, 6);dfa.get_mut(&5).unwrap().insert(109, 6);dfa.get_mut(&5).unwrap().insert(71, 6);dfa.get_mut(&5).unwrap().insert(53, 6);dfa.insert(9, HashMap::new());dfa.insert(2, HashMap::new());dfa.get_mut(&2).unwrap().insert(99, 10);dfa.get_mut(&2).unwrap().insert(55, 2);dfa.get_mut(&2).unwrap().insert(49, 2);dfa.get_mut(&2).unwrap().insert(57, 2);dfa.get_mut(&2).unwrap().insert(48, 2);dfa.get_mut(&2).unwrap().insert(102, 10);dfa.get_mut(&2).unwrap().insert(98, 10);dfa.get_mut(&2).unwrap().insert(50, 2);dfa.get_mut(&2).unwrap().insert(56, 2);dfa.get_mut(&2).unwrap().insert(100, 10);dfa.get_mut(&2).unwrap().insert(101, 10);dfa.get_mut(&2).unwrap().insert(97, 10);dfa.get_mut(&2).unwrap().insert(51, 2);dfa.get_mut(&2).unwrap().insert(54, 2);dfa.get_mut(&2).unwrap().insert(53, 2);dfa.get_mut(&2).unwrap().insert(52, 2);dfa.insert(4, HashMap::new());dfa.get_mut(&4).unwrap().insert(76, 1);dfa.get_mut(&4).unwrap().insert(86, 1);dfa.get_mut(&4).unwrap().insert(112, 1);dfa.get_mut(&4).unwrap().insert(103, 1);dfa.get_mut(&4).unwrap().insert(75, 1);dfa.get_mut(&4).unwrap().insert(69, 1);dfa.get_mut(&4).unwrap().insert(49, 4);dfa.get_mut(&4).unwrap().insert(67, 1);dfa.get_mut(&4).unwrap().insert(100, 4);dfa.get_mut(&4).unwrap().insert(82, 1);dfa.get_mut(&4).unwrap().insert(99, 4);dfa.get_mut(&4).unwrap().insert(70, 1);dfa.get_mut(&4).unwrap().insert(88, 1);dfa.get_mut(&4).unwrap().insert(101, 4);dfa.get_mut(&4).unwrap().insert(74, 1);dfa.get_mut(&4).unwrap().insert(117, 1);dfa.get_mut(&4).unwrap().insert(53, 4);dfa.get_mut(&4).unwrap().insert(110, 1);dfa.get_mut(&4).unwrap().insert(108, 1);dfa.get_mut(&4).unwrap().insert(89, 1);dfa.get_mut(&4).unwrap().insert(111, 1);dfa.get_mut(&4).unwrap().insert(65, 1);dfa.get_mut(&4).unwrap().insert(98, 4);dfa.get_mut(&4).unwrap().insert(114, 1);dfa.get_mut(&4).unwrap().insert(97, 4);dfa.get_mut(&4).unwrap().insert(106, 1);dfa.get_mut(&4).unwrap().insert(57, 4);dfa.get_mut(&4).unwrap().insert(121, 1);dfa.get_mut(&4).unwrap().insert(50, 4);dfa.get_mut(&4).unwrap().insert(85, 1);dfa.get_mut(&4).unwrap().insert(66, 1);dfa.get_mut(&4).unwrap().insert(116, 1);dfa.get_mut(&4).unwrap().insert(68, 1);dfa.get_mut(&4).unwrap().insert(90, 1);dfa.get_mut(&4).unwrap().insert(56, 4);dfa.get_mut(&4).unwrap().insert(107, 1);dfa.get_mut(&4).unwrap().insert(109, 1);dfa.get_mut(&4).unwrap().insert(87, 1);dfa.get_mut(&4).unwrap().insert(52, 4);dfa.get_mut(&4).unwrap().insert(84, 1);dfa.get_mut(&4).unwrap().insert(79, 1);dfa.get_mut(&4).unwrap().insert(115, 1);dfa.get_mut(&4).unwrap().insert(81, 1);dfa.get_mut(&4).unwrap().insert(73, 1);dfa.get_mut(&4).unwrap().insert(55, 4);dfa.get_mut(&4).unwrap().insert(119, 1);dfa.get_mut(&4).unwrap().insert(122, 1);dfa.get_mut(&4).unwrap().insert(71, 1);dfa.get_mut(&4).unwrap().insert(120, 1);dfa.get_mut(&4).unwrap().insert(77, 1);dfa.get_mut(&4).unwrap().insert(118, 1);dfa.get_mut(&4).unwrap().insert(51, 4);dfa.get_mut(&4).unwrap().insert(78, 1);dfa.get_mut(&4).unwrap().insert(80, 1);dfa.get_mut(&4).unwrap().insert(72, 1);dfa.get_mut(&4).unwrap().insert(104, 1);dfa.get_mut(&4).unwrap().insert(113, 1);dfa.get_mut(&4).unwrap().insert(102, 4);dfa.get_mut(&4).unwrap().insert(105, 1);dfa.get_mut(&4).unwrap().insert(48, 4);dfa.get_mut(&4).unwrap().insert(83, 1);dfa.get_mut(&4).unwrap().insert(54, 4);dfa.insert(8, HashMap::new());dfa.get_mut(&8).unwrap().insert(39, 9);dfa.insert(0, HashMap::new());dfa.get_mut(&0).unwrap().insert(69, 1);dfa.get_mut(&0).unwrap().insert(117, 1);dfa.get_mut(&0).unwrap().insert(107, 1);dfa.get_mut(&0).unwrap().insert(49, 2);dfa.get_mut(&0).unwrap().insert(72, 1);dfa.get_mut(&0).unwrap().insert(119, 1);dfa.get_mut(&0).unwrap().insert(99, 4);dfa.get_mut(&0).unwrap().insert(114, 1);dfa.get_mut(&0).unwrap().insert(75, 1);dfa.get_mut(&0).unwrap().insert(53, 2);dfa.get_mut(&0).unwrap().insert(57, 2);dfa.get_mut(&0).unwrap().insert(39, 3);dfa.get_mut(&0).unwrap().insert(90, 1);dfa.get_mut(&0).unwrap().insert(81, 1);dfa.get_mut(&0).unwrap().insert(79, 1);dfa.get_mut(&0).unwrap().insert(102, 4);dfa.get_mut(&0).unwrap().insert(68, 1);dfa.get_mut(&0).unwrap().insert(82, 1);dfa.get_mut(&0).unwrap().insert(118, 1);dfa.get_mut(&0).unwrap().insert(51, 2);dfa.get_mut(&0).unwrap().insert(77, 1);dfa.get_mut(&0).unwrap().insert(66, 1);dfa.get_mut(&0).unwrap().insert(67, 1);dfa.get_mut(&0).unwrap().insert(54, 2);dfa.get_mut(&0).unwrap().insert(34, 5);dfa.get_mut(&0).unwrap().insert(104, 1);dfa.get_mut(&0).unwrap().insert(122, 1);dfa.get_mut(&0).unwrap().insert(105, 1);dfa.get_mut(&0).unwrap().insert(56, 2);dfa.get_mut(&0).unwrap().insert(100, 4);dfa.get_mut(&0).unwrap().insert(106, 1);dfa.get_mut(&0).unwrap().insert(98, 4);dfa.get_mut(&0).unwrap().insert(83, 1);dfa.get_mut(&0).unwrap().insert(71, 1);dfa.get_mut(&0).unwrap().insert(115, 1);dfa.get_mut(&0).unwrap().insert(80, 1);dfa.get_mut(&0).unwrap().insert(76, 1);dfa.get_mut(&0).unwrap().insert(84, 1);dfa.get_mut(&0).unwrap().insert(78, 1);dfa.get_mut(&0).unwrap().insert(97, 4);dfa.get_mut(&0).unwrap().insert(108, 1);dfa.get_mut(&0).unwrap().insert(109, 1);dfa.get_mut(&0).unwrap().insert(113, 1);dfa.get_mut(&0).unwrap().insert(121, 1);dfa.get_mut(&0).unwrap().insert(87, 1);dfa.get_mut(&0).unwrap().insert(48, 2);dfa.get_mut(&0).unwrap().insert(85, 1);dfa.get_mut(&0).unwrap().insert(73, 1);dfa.get_mut(&0).unwrap().insert(50, 2);dfa.get_mut(&0).unwrap().insert(89, 1);dfa.get_mut(&0).unwrap().insert(70, 1);dfa.get_mut(&0).unwrap().insert(52, 2);dfa.get_mut(&0).unwrap().insert(112, 1);dfa.get_mut(&0).unwrap().insert(120, 1);dfa.get_mut(&0).unwrap().insert(55, 2);dfa.get_mut(&0).unwrap().insert(86, 1);dfa.get_mut(&0).unwrap().insert(88, 1);dfa.get_mut(&0).unwrap().insert(111, 1);dfa.get_mut(&0).unwrap().insert(116, 1);dfa.get_mut(&0).unwrap().insert(110, 1);dfa.get_mut(&0).unwrap().insert(101, 4);dfa.get_mut(&0).unwrap().insert(65, 1);dfa.get_mut(&0).unwrap().insert(103, 1);dfa.get_mut(&0).unwrap().insert(74, 1);dfa.insert(6, HashMap::new());dfa.get_mut(&6).unwrap().insert(34, 7);dfa.insert(3, HashMap::new());dfa.get_mut(&3).unwrap().insert(87, 8);dfa.get_mut(&3).unwrap().insert(103, 8);dfa.get_mut(&3).unwrap().insert(100, 8);dfa.get_mut(&3).unwrap().insert(89, 8);dfa.get_mut(&3).unwrap().insert(82, 8);dfa.get_mut(&3).unwrap().insert(75, 8);dfa.get_mut(&3).unwrap().insert(69, 8);dfa.get_mut(&3).unwrap().insert(81, 8);dfa.get_mut(&3).unwrap().insert(105, 8);dfa.get_mut(&3).unwrap().insert(97, 8);dfa.get_mut(&3).unwrap().insert(116, 8);dfa.get_mut(&3).unwrap().insert(83, 8);dfa.get_mut(&3).unwrap().insert(56, 8);dfa.get_mut(&3).unwrap().insert(119, 8);dfa.get_mut(&3).unwrap().insert(109, 8);dfa.get_mut(&3).unwrap().insert(71, 8);dfa.get_mut(&3).unwrap().insert(74, 8);dfa.get_mut(&3).unwrap().insert(117, 8);dfa.get_mut(&3).unwrap().insert(65, 8);dfa.get_mut(&3).unwrap().insert(106, 8);dfa.get_mut(&3).unwrap().insert(79, 8);dfa.get_mut(&3).unwrap().insert(54, 8);dfa.get_mut(&3).unwrap().insert(110, 8);dfa.get_mut(&3).unwrap().insert(101, 8);dfa.get_mut(&3).unwrap().insert(72, 8);dfa.get_mut(&3).unwrap().insert(67, 8);dfa.get_mut(&3).unwrap().insert(52, 8);dfa.get_mut(&3).unwrap().insert(113, 8);dfa.get_mut(&3).unwrap().insert(111, 8);dfa.get_mut(&3).unwrap().insert(84, 8);dfa.get_mut(&3).unwrap().insert(86, 8);dfa.get_mut(&3).unwrap().insert(88, 8);dfa.get_mut(&3).unwrap().insert(90, 8);dfa.get_mut(&3).unwrap().insert(104, 8);dfa.get_mut(&3).unwrap().insert(99, 8);dfa.get_mut(&3).unwrap().insert(77, 8);dfa.get_mut(&3).unwrap().insert(66, 8);dfa.get_mut(&3).unwrap().insert(98, 8);dfa.get_mut(&3).unwrap().insert(50, 8);dfa.get_mut(&3).unwrap().insert(80, 8);dfa.get_mut(&3).unwrap().insert(85, 8);dfa.get_mut(&3).unwrap().insert(48, 8);dfa.get_mut(&3).unwrap().insert(107, 8);dfa.get_mut(&3).unwrap().insert(68, 8);dfa.get_mut(&3).unwrap().insert(73, 8);dfa.get_mut(&3).unwrap().insert(39, 8);dfa.get_mut(&3).unwrap().insert(108, 8);dfa.get_mut(&3).unwrap().insert(57, 8);dfa.get_mut(&3).unwrap().insert(49, 8);dfa.get_mut(&3).unwrap().insert(51, 8);dfa.get_mut(&3).unwrap().insert(78, 8);dfa.get_mut(&3).unwrap().insert(112, 8);dfa.get_mut(&3).unwrap().insert(76, 8);dfa.get_mut(&3).unwrap().insert(53, 8);dfa.get_mut(&3).unwrap().insert(121, 8);dfa.get_mut(&3).unwrap().insert(120, 8);dfa.get_mut(&3).unwrap().insert(114, 8);dfa.get_mut(&3).unwrap().insert(115, 8);dfa.get_mut(&3).unwrap().insert(122, 8);dfa.get_mut(&3).unwrap().insert(102, 8);dfa.get_mut(&3).unwrap().insert(70, 8);dfa.get_mut(&3).unwrap().insert(118, 8);dfa.get_mut(&3).unwrap().insert(55, 8);dfa.insert(7, HashMap::new());dfa.insert(10, HashMap::new());dfa.get_mut(&10).unwrap().insert(100, 10);dfa.get_mut(&10).unwrap().insert(101, 10);dfa.get_mut(&10).unwrap().insert(98, 10);dfa.get_mut(&10).unwrap().insert(48, 10);dfa.get_mut(&10).unwrap().insert(55, 10);dfa.get_mut(&10).unwrap().insert(102, 10);dfa.get_mut(&10).unwrap().insert(54, 10);dfa.get_mut(&10).unwrap().insert(49, 10);dfa.get_mut(&10).unwrap().insert(50, 10);dfa.get_mut(&10).unwrap().insert(99, 10);dfa.get_mut(&10).unwrap().insert(97, 10);dfa.get_mut(&10).unwrap().insert(52, 10);dfa.get_mut(&10).unwrap().insert(56, 10);dfa.get_mut(&10).unwrap().insert(57, 10);dfa.get_mut(&10).unwrap().insert(51, 10);dfa.get_mut(&10).unwrap().insert(53, 10);dfa.insert(1, HashMap::new());dfa.get_mut(&1).unwrap().insert(111, 1);dfa.get_mut(&1).unwrap().insert(106, 1);dfa.get_mut(&1).unwrap().insert(65, 1);dfa.get_mut(&1).unwrap().insert(97, 1);dfa.get_mut(&1).unwrap().insert(108, 1);dfa.get_mut(&1).unwrap().insert(98, 1);dfa.get_mut(&1).unwrap().insert(88, 1);dfa.get_mut(&1).unwrap().insert(87, 1);dfa.get_mut(&1).unwrap().insert(114, 1);dfa.get_mut(&1).unwrap().insert(116, 1);dfa.get_mut(&1).unwrap().insert(55, 1);dfa.get_mut(&1).unwrap().insert(57, 1);dfa.get_mut(&1).unwrap().insert(74, 1);dfa.get_mut(&1).unwrap().insert(100, 1);dfa.get_mut(&1).unwrap().insert(122, 1);dfa.get_mut(&1).unwrap().insert(118, 1);dfa.get_mut(&1).unwrap().insert(89, 1);dfa.get_mut(&1).unwrap().insert(51, 1);dfa.get_mut(&1).unwrap().insert(48, 1);dfa.get_mut(&1).unwrap().insert(77, 1);dfa.get_mut(&1).unwrap().insert(69, 1);dfa.get_mut(&1).unwrap().insert(90, 1);dfa.get_mut(&1).unwrap().insert(82, 1);dfa.get_mut(&1).unwrap().insert(102, 1);dfa.get_mut(&1).unwrap().insert(66, 1);dfa.get_mut(&1).unwrap().insert(72, 1);dfa.get_mut(&1).unwrap().insert(84, 1);dfa.get_mut(&1).unwrap().insert(86, 1);dfa.get_mut(&1).unwrap().insert(75, 1);dfa.get_mut(&1).unwrap().insert(83, 1);dfa.get_mut(&1).unwrap().insert(103, 1);dfa.get_mut(&1).unwrap().insert(68, 1);dfa.get_mut(&1).unwrap().insert(56, 1);dfa.get_mut(&1).unwrap().insert(109, 1);dfa.get_mut(&1).unwrap().insert(85, 1);dfa.get_mut(&1).unwrap().insert(71, 1);dfa.get_mut(&1).unwrap().insert(79, 1);dfa.get_mut(&1).unwrap().insert(101, 1);dfa.get_mut(&1).unwrap().insert(110, 1);dfa.get_mut(&1).unwrap().insert(104, 1);dfa.get_mut(&1).unwrap().insert(99, 1);dfa.get_mut(&1).unwrap().insert(119, 1);dfa.get_mut(&1).unwrap().insert(52, 1);dfa.get_mut(&1).unwrap().insert(70, 1);dfa.get_mut(&1).unwrap().insert(120, 1);dfa.get_mut(&1).unwrap().insert(117, 1);dfa.get_mut(&1).unwrap().insert(67, 1);dfa.get_mut(&1).unwrap().insert(107, 1);dfa.get_mut(&1).unwrap().insert(113, 1);dfa.get_mut(&1).unwrap().insert(53, 1);dfa.get_mut(&1).unwrap().insert(73, 1);dfa.get_mut(&1).unwrap().insert(50, 1);dfa.get_mut(&1).unwrap().insert(105, 1);dfa.get_mut(&1).unwrap().insert(112, 1);dfa.get_mut(&1).unwrap().insert(78, 1);dfa.get_mut(&1).unwrap().insert(115, 1);dfa.get_mut(&1).unwrap().insert(49, 1);dfa.get_mut(&1).unwrap().insert(121, 1);dfa.get_mut(&1).unwrap().insert(80, 1);dfa.get_mut(&1).unwrap().insert(76, 1);dfa.get_mut(&1).unwrap().insert(54, 1);dfa.get_mut(&1).unwrap().insert(81, 1);accepting_states.insert(1, String::from("ident"));accepting_states.insert(4, String::from("ident"));accepting_states.insert(9, String::from("string"));accepting_states.insert(10, String::from("hexnumber"));accepting_states.insert(2, String::from("number"));accepting_states.insert(7, String::from("char"));
    let bytes: &[u8] = file.as_bytes();
    let mut curr_idx = 0;
    let mut curr_state = 0;
    let mut states: Vec<u32> = Vec::new();
    let mut curr_lexeme = String::new();
    let mut found_tokens: Vec<Token> = Vec::new();
    while curr_idx < bytes.len() {
        let curr_char = bytes[curr_idx];
    if dfa[&curr_state].contains_key(&curr_char) {
        let next_state = dfa[&curr_state][&curr_char];
        curr_state = next_state;
        states.push(curr_state);
        curr_lexeme.push(curr_char as char);
        curr_idx += 1;
    }
    else if !states.is_empty() {
        while !states.is_empty() {
            let top = states.pop().unwrap();
            if accepting_states.contains_key(&top) {
    
        found_tokens.push(Token::new(
            accepting_states[&top].clone(),
            curr_lexeme.clone(),
        ));
        
    curr_state = 0;
                    states.clear();
                    curr_lexeme.clear();
                }
            }
        } else {
            curr_idx += 1;
        }
    }
    for token in found_tokens {
        println!("{:?}", token);
    }
}
    